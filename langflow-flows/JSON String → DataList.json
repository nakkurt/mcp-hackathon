{"name": "JSON String \u2192 DataList", "description": "Parses an input string that contains JSON and emits one Data object with the parsed structure in its `.json` attribute.", "icon": null, "icon_bg_color": null, "gradient": null, "data": {"edges": [], "nodes": [{"data": {"node": {"template": {"_type": "Component", "code": {"type": "code", "required": true, "placeholder": "", "list": false, "show": true, "multiline": true, "value": "\"\"\"\nJsonString \u279c Data\n-----------------\nA Langflow custom component that accepts a JSON **string** and returns\na single `Data` object whose `.json` field contains the parsed payload.\n\"\"\"\n\nimport json\nfrom langflow.custom import Component\nfrom langflow.io import MessageTextInput, Output\nfrom langflow.schema import Data\n\n\nclass JsonStringToDataList(Component):\n    display_name = \"JSON String \u2192 DataList\"\n    description = (\n        \"Parses an input string that contains JSON and emits one Data object \"\n        \"with the parsed structure in its `.json` attribute.\"\n    )\n    icon = \"code\"\n    name = \"JsonStringToDataList\"\n\n    # \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 input \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    inputs = [\n        MessageTextInput(\n            name=\"json_string\",\n            display_name=\"JSON String\",\n            required=True,\n            info='Example: {\"foo\": 1, \"bar\": \"baz\"}',\n        )\n    ]\n\n    # \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    outputs = [\n        Output(\n            name=\"data\",\n            display_name=\"DataList\",\n            method=\"parse_json\",\n        )\n    ]\n\n    # \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 core logic \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    def parse_json(self) -> list[Data]:\n        raw = self.json_string\n        if not isinstance(raw, str):\n            raise TypeError(\"json_string must be a str\")\n\n        try:\n            parsed = json.loads(raw)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\"Invalid JSON: {e}\") from e\n\n        if isinstance(parsed, dict):\n            \n            return [Data(**parsed if parsed else {})]\n            \n        elif isinstance(parsed, list):\n            return [Data(**elem) for elem in parsed]\n        return [Data(text=\"None\")]\n            \n", "fileTypes": [], "file_path": "", "password": false, "name": "code", "advanced": true, "dynamic": true, "info": "", "load_from_db": false, "title_case": false}, "json_string": {"tool_mode": false, "trace_as_input": true, "trace_as_metadata": true, "load_from_db": false, "list": false, "list_add_label": "Add More", "required": true, "placeholder": "", "show": true, "name": "json_string", "value": "", "display_name": "JSON String", "advanced": false, "input_types": ["Message"], "dynamic": false, "info": "Example: {\"foo\": 1, \"bar\": \"baz\"}", "title_case": false, "type": "str", "_input_type": "MessageTextInput"}}, "description": "Parses an input string that contains JSON and emits one Data object with the parsed structure in its `.json` attribute.", "icon": "code", "base_classes": ["Data"], "display_name": "JSON String \u2192 DataList", "documentation": "", "minimized": false, "custom_fields": {}, "output_types": [], "pinned": false, "conditional_paths": [], "frozen": false, "outputs": [{"types": ["Data"], "selected": "Data", "name": "data", "hidden": null, "display_name": "DataList", "method": "parse_json", "value": "__UNDEFINED__", "cache": true, "required_inputs": null, "allows_loop": false, "options": null, "tool_mode": true}], "field_order": ["json_string"], "beta": false, "legacy": false, "edited": true, "metadata": {}, "tool_mode": false, "official": false}, "showNode": true, "type": "JsonStringToDataList", "id": "JsonStringToDataList-i4Bix"}, "id": "JsonStringToDataList-i4Bix", "position": {"x": 0, "y": 0}, "type": "genericNode"}], "viewport": {"x": 1, "y": 1, "zoom": 1}}, "is_component": true, "updated_at": "2025-05-17T23:59:53+00:00", "webhook": false, "endpoint_name": null, "tags": [], "locked": false, "mcp_enabled": true, "action_name": null, "action_description": null, "access_type": "PRIVATE", "id": "e865fca0-7d96-4d2e-b9fb-594cc8e735cf", "user_id": "154bb2fa-5a61-447f-bdf9-a5b73f8d8516", "folder_id": "a8a36b90-719e-4e7f-b9ab-9208ffd9acff"}